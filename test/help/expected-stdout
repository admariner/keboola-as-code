Keboola CLI is a set of commands
for operating your cloud data pipeline.

The whole Keboola project is represented
by a local directory structure.

Project can be synchronized in both
directions: Keboola project <-> local directory.

Start by running the "kbc init" in a new empty directory.
Your project will be pulled, and you can start working.

Usage:
  %s [command]

Available Commands:
  status         Print info about current directory.

  sync
    init         Init local project directory and perform the first pull.
    diff         Print differences between local and remote state.
    pull         Pull configurations to the project directory.
    push         Push configurations to the Keboola project.

  local
    validate     Validate the local project directory.
    persist      Detect created/deleted configs/rows.
    create
      config     Create config.
      row        Create config row.
    encrypt      Encrypt all unencrypted secrets.
    fix-paths    Normalize all local paths.
    template
      use        Apply template.

  ci
    workflows    Generate Github Actions workflows.

  remote
    create
      branch     Create branch.

  template
    describe     Describe template inputs.
    create       Create or update template in repository directory.
    repository
      init       Init repository directory.
      validate   Validate all templates in the repository.
      fix-paths  Normalize all paths in the repository.

  help           Help about any command

Aliases:
  sync init            i, init
  sync diff            d, diff
  sync pull            pl, pull
  sync push            ph, push
  local validate       v, validate
  local persist        pt, persist
  local create         c, create
  local encrypt        e, encrypt
  local template use   use
  template             t
  template repository  r, repo

Flags:
  -h, --help                       print help for command
  -l, --log-file string            path to a log file for details
  -t, --storage-api-token string   storage API token from your project
  -v, --verbose                    print details
      --verbose-api                log each API request and response
  -V, --version                    print version
  -d, --working-dir string         use other working directory

Use "%s [command] --help" for more information about a command.
