# Common etcd definition for the Templates API and Stream API.
# Values can be overridden by Helm --set flag or by another --values files.
# Chart default values: https://github.com/bitnami/charts/blob/master/bitnami/etcd/values.yaml

# Keboola specific options
commonLabels:
  app: "{{ tpl (.Release.Name) . }}"
podLabels:
  app: "{{ tpl (.Release.Name) . }}"
nodeSelector:
  nodepool: main

# Locked/updated etcd image
image:
  tag: 3.5.21-debian-12-r1

# Additional pod annotations
podAnnotations:
  # Enable sending logs to PaperTrail
  log: "true"
  # Enable pulling of the metrics by DataDog Agent (see also network policy)
  ad.datadoghq.com/etcd.check_names: '["etcd"]'
  ad.datadoghq.com/etcd.init_configs: '[{}]'
  ad.datadoghq.com/etcd.instances: |
    [
      {
        "prometheus_url": "http://%%host%%:2379/metrics"
      }
    ]

# Resources limits
resources:
  requests:
    cpu: "200m"
    memory: "256Mi"
  limits:
    memory: "256Mi"

# Keep 15 minutes of history, see https://etcd.io/docs/v3.5/op-guide/maintenance/#auto-compaction.
# etcd uses MVCC - multi version concurrency control.
# All previous versions of the database state are kept.
# Here, the Auto Compaction Mode is enabled.
# Each 15 minutes are deleted all old revisions older than 15 minutes.
autoCompactionMode: "periodic"
autoCompactionRetention: "15m"

extraEnvVars:
  - name: ETCD_DISABLE_STORE_MEMBER_ID
    value: "yes"
  # Set max DB size to 8GB, it is the recommended maximum.
  - name: ETCD_QUOTA_BACKEND_BYTES
    value: "8589934592"
  # Optimize memory usage, see: https://etcd.io/docs/v3.5/tuning/#snapshots
  # Default value in etcd v3.2+ is "100 000": https://etcd.io/docs/v3.5/op-guide/maintenance/#raft-log-retention
  - name: ETCD_SNAPSHOT_COUNT
    value: "10000"
  # GOMEMLIMIT to prevent OOM kill, update the value together with "resources" spec.
  - name: GOMEMLIMIT
    value: "256MiB"
  # Increase limit of operations in transaction.
  - name: ETCD_MAX_TXN_OPS
    value: "1024"

# The root password is used for authentication, the client gets a JWT token with short expiration.
auth:
  rbac:
    enabled: true
    create: true
    allowNoneAuthentication: false
  token:
    type: jwt
    ttl: 60m

# Only internal communication is allowed: no public IP
service:
  clusterIP: None #headless service

# Only internal communication is allowed: from a client, between nodes, and from the DataDog
networkPolicy:
  enabled: true
  allowExternal: false
  extraIngress:
  # Allow DataDog HTTP calls to the /metrics
  - ports:
      - port: 2379
    from:
      - namespaceSelector:
          matchLabels:
            kubernetes.io/metadata.name: datadog
        podSelector:
          matchLabels:
            app: datadog-agent

# Set disk size
persistence:
  enabled: true
  size: 50Gi

# At least 51% of the cluster must be available during rollout,
# otherwise, the quorum is lost and the cluster will not work.
# This should be disabled if replicaCount=1, that would block the rollout completely.
pdb:
  create: true

# Modified probes, to make the cluster available sooner
startupProbe:
  enabled: true
  initialDelaySeconds: 20
  periodSeconds: 5
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 300
livenessProbe:
  initialDelaySeconds: 0 # replaced by startupProbe
readinessProbe:
  initialDelaySeconds: 0 # replaced by startupProbe

preUpgradeJob:
  resources:
    requests:
      cpu: "100m"
      memory: "64Mi"
    limits:
      memory: "64Mi"

defrag:
  enabled: true
  cronjob:
    schedule: "0 */24 * * *"
    resources:
      requests:
        cpu: "100m"
        memory: "64Mi"
      limits:
        memory: "64Mi"
