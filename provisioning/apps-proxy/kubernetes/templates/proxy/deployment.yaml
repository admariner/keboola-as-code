---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: apps-proxy
  namespace: $NAMESPACE
  labels:
    app: apps-proxy
    releaseId: $RELEASE_ID
spec:
  replicas: $APPS_PROXY_REPLICAS
  selector:
    matchLabels:
      app: apps-proxy
  template:
    metadata:
      labels:
        app: apps-proxy
        releaseId: $RELEASE_ID
        tags.datadoghq.com/env: "$KEBOOLA_STACK"
        tags.datadoghq.com/service: "apps-proxy"
        tags.datadoghq.com/version: "$RELEASE_ID"
      annotations:
        log: "true"
        ad.datadoghq.com/tags: '{"git.commit.sha": "$COMMIT_HASH", "git.repository_url": "github.com/keboola/keboola-as-code"}'
        ad.datadoghq.com/apps-proxy.checks: |
          {
            "openmetrics": {
              "instances": [
                {
                  "openmetrics_endpoint": "http://%%host%%:9000/metrics",
                  "metrics": [".*"],
                  "collect_histogram_buckets": true,
                  "histogram_buckets_as_distributions": true,
                  "tag_by_endpoint": false
                }
              ]
            }
          }
    spec:
      containers:
        - name: apps-proxy
          image: $APPS_PROXY_REPOSITORY:$APPS_PROXY_IMAGE_TAG
          resources:
            requests:
              cpu: "200m"
              memory: "768Mi"
            limits:
              memory: "768Mi"
          ports:
            - containerPort: 8000 # Proxy
            - containerPort: 9000 # metrics
          env:
            # 80% of the resources.limits.memory
            - name: GOMEMLIMIT
              value: "550MiB"
            - name: APPS_PROXY_SANDBOXES_API_URL
              valueFrom:
                configMapKeyRef:
                  name: apps-proxy
                  key: sandboxesApiHost
            - name: APPS_PROXY_SANDBOXES_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: apps-proxy-token
                  key: sandboxesApiToken
            - name: APPS_PROXY_API_PUBLIC_URL
              valueFrom:
                configMapKeyRef:
                  name: apps-proxy
                  key: appsProxyApiHost
            - name: APPS_PROXY_COOKIE_SECRET_SALT
              valueFrom:
                secretKeyRef:
                  name: apps-proxy-salt
                  key: cookieSecretSalt
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/env']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version']
          startupProbe:
            httpGet:
              path: /health-check
              port: 8000
              httpHeaders:
                - name: Host
                  value: KubernetesStartupProbe
            initialDelaySeconds: 10
            periodSeconds: 1
            failureThreshold: 30
          readinessProbe:
            httpGet:
              path: /health-check
              port: 8000
              httpHeaders:
                - name: Host
                  value: KubernetesReadinessProbe
            periodSeconds: 10
            failureThreshold: 1
          livenessProbe:
            httpGet:
              path: /health-check
              port: 8000
              httpHeaders:
                - name: Host
                  value: KubernetesLivenessProbe
            periodSeconds: 10
            failureThreshold: 3
      nodeSelector:
        nodepool: main
