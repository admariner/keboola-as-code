---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: stream-api
  namespace: stream
  labels:
    app: stream-api
    releaseId: dev-my-release
spec:
  replicas: 2
  selector:
    matchLabels:
      app: stream-api
  template:
    metadata:
      labels:
        app: stream-api
        releaseId: dev-my-release
        stream-etcd-client: "true"
        tags.datadoghq.com/env: "local-machine"
        tags.datadoghq.com/service: "stream"
        tags.datadoghq.com/version: "dev-my-release"
      annotations:
        log: "true"
        ad.datadoghq.com/tags: '{"git.commit.sha": "722d3a23d64520399db294efaffeb310e9fac72f", "git.repository_url": "github.com/keboola/keboola-as-code"}'
        ad.datadoghq.com/stream-api.checks: |
          {
            "openmetrics": {
              "instances": [
                {
                  "openmetrics_endpoint": "http://%%host%%:9000/metrics",
                  "metrics": [".*"],
                  "collect_histogram_buckets": true,
                  "histogram_buckets_as_distributions": true,
                  "tag_by_endpoint": false
                }
              ]
            }
          }
    spec:
      terminationGracePeriodSeconds: 60
      containers:
        - name: stream-api
          image: docker.io/keboola/stream-api:722d3a23d-1718864558
          command: [ "/app/service" ]
          args: [ "--config-file", "/stream/config/config.yaml", "api" ] # run API component
          # <<<REMOVED RESOURCES KEY>>>
          ports:
            - containerPort: 8000 # API
            - containerPort: 9000 # metrics
          volumeMounts:
            - name: config
              mountPath: /stream/config
              readOnly: true
          env:
            - name: GOMEMLIMIT
              value: "250MiB"
            - name: STREAM_API_LISTEN
              value: 0.0.0.0:8000
            - name: STREAM_METRICS_LISTEN
              value: 0.0.0.0:9000
            - name: STREAM_NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: STREAM_ETCD_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: stream-etcd
                  key: etcd-root-password
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/env']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version']
          startupProbe:
            httpGet:
              path: /health-check
              port: 8000
              httpHeaders:
                - name: Host
                  value: KubernetesStartupProbe
            initialDelaySeconds: 10
            periodSeconds: 1
            failureThreshold: 30
          readinessProbe:
            httpGet:
              path: /health-check
              port: 8000
              httpHeaders:
                - name: Host
                  value: KubernetesReadinessProbe
            periodSeconds: 10
            failureThreshold: 1
          livenessProbe:
            httpGet:
              path: /health-check
              port: 8000
              httpHeaders:
                - name: Host
                  value: KubernetesLivenessProbe
            periodSeconds: 10
            failureThreshold: 3
      volumes:
        - name: config
          configMap:
            name: stream-config
            items:
              - key: config.yaml
                path: config.yaml
      nodeSelector:
        nodepool: main
