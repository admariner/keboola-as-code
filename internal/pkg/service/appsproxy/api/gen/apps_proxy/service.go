// Code generated by goa v3.19.1, DO NOT EDIT.
//
// apps-proxy service
//
// Command:
// $ goa gen github.com/keboola/keboola-as-code/api/appsproxy --output
// ./internal/pkg/service/appsproxy/api

package appsproxy

import (
	"context"

	dependencies "github.com/keboola/keboola-as-code/internal/pkg/service/appsproxy/dependencies"
	"goa.design/goa/v3/security"
)

// Service for proxing requests/authorization to data applications using
// Keboola data app component.
type Service interface {
	// Redirect to /_proxy.
	APIRootIndex(context.Context, dependencies.PublicRequestScope) (err error)
	// List API name and link to documentation.
	APIVersionIndex(context.Context, dependencies.PublicRequestScope) (res *ServiceDetail, err error)
	// HealthCheck implements HealthCheck.
	HealthCheck(context.Context, dependencies.PublicRequestScope) (res string, err error)
	// Validation endpoint of OIDC authorization provider configuration.
	Validate(context.Context, dependencies.ProjectRequestScope, *ValidatePayload) (res *Validations, err error)
}

// Auther defines the authorization functions to be implemented by the service.
type Auther interface {
	// APIKeyAuth implements the authorization logic for the APIKey security scheme.
	APIKeyAuth(ctx context.Context, key string, schema *security.APIKeyScheme) (context.Context, error)
}

// APIName is the name of the API as defined in the design.
const APIName = "appsproxy"

// APIVersion is the version of the API as defined in the design.
const APIVersion = "1.0"

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "apps-proxy"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [4]string{"ApiRootIndex", "ApiVersionIndex", "HealthCheck", "Validate"}

// The configuration that is part of the auth providers section.
type Configuration struct {
	// Unique ID of provider.
	ID string
	// Client ID of provider.
	ClientID string
	// Client secret provided by OIDC provider.
	ClientSecret string
}

// ServiceDetail is the result type of the apps-proxy service ApiVersionIndex
// method.
type ServiceDetail struct {
	// Name of the API
	API string
	// URL of the API documentation.
	Documentation string
}

// ValidatePayload is the payload type of the apps-proxy service Validate
// method.
type ValidatePayload struct {
	StorageAPIToken string
}

// Validations is the result type of the apps-proxy service Validate method.
type Validations struct {
	// All authorization providers.
	Configuration []*Configuration
}
