// Code generated by goa v3.19.1, DO NOT EDIT.
//
// apps-proxy HTTP client types
//
// Command:
// $ goa gen github.com/keboola/keboola-as-code/api/appsproxy --output
// ./internal/pkg/service/appsproxy/api

package client

import (
	appsproxy "github.com/keboola/keboola-as-code/internal/pkg/service/appsproxy/api/gen/apps_proxy"
	goa "goa.design/goa/v3/pkg"
)

// APIVersionIndexResponseBody is the type of the "apps-proxy" service
// "ApiVersionIndex" endpoint HTTP response body.
type APIVersionIndexResponseBody struct {
	// Name of the API
	API *string `form:"api,omitempty" json:"api,omitempty" xml:"api,omitempty"`
	// URL of the API documentation.
	Documentation *string `form:"documentation,omitempty" json:"documentation,omitempty" xml:"documentation,omitempty"`
}

// ValidateResponseBody is the type of the "apps-proxy" service "Validate"
// endpoint HTTP response body.
type ValidateResponseBody struct {
	// All authorization providers.
	Configuration []*ConfigurationResponseBody `form:"configuration,omitempty" json:"configuration,omitempty" xml:"configuration,omitempty"`
}

// ConfigurationResponseBody is used to define fields on response body types.
type ConfigurationResponseBody struct {
	// Unique ID of provider.
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Client ID of provider.
	ClientID *string `form:"clientID,omitempty" json:"clientID,omitempty" xml:"clientID,omitempty"`
	// Client secret provided by OIDC provider.
	ClientSecret *string `form:"clientSecret,omitempty" json:"clientSecret,omitempty" xml:"clientSecret,omitempty"`
}

// NewAPIVersionIndexServiceDetailOK builds a "apps-proxy" service
// "ApiVersionIndex" endpoint result from a HTTP "OK" response.
func NewAPIVersionIndexServiceDetailOK(body *APIVersionIndexResponseBody) *appsproxy.ServiceDetail {
	v := &appsproxy.ServiceDetail{
		API:           *body.API,
		Documentation: *body.Documentation,
	}

	return v
}

// NewValidateValidationsOK builds a "apps-proxy" service "Validate" endpoint
// result from a HTTP "OK" response.
func NewValidateValidationsOK(body *ValidateResponseBody) *appsproxy.Validations {
	v := &appsproxy.Validations{}
	if body.Configuration != nil {
		v.Configuration = make([]*appsproxy.Configuration, len(body.Configuration))
		for i, val := range body.Configuration {
			v.Configuration[i] = unmarshalConfigurationResponseBodyToAppsproxyConfiguration(val)
		}
	}

	return v
}

// ValidateAPIVersionIndexResponseBody runs the validations defined on
// ApiVersionIndexResponseBody
func ValidateAPIVersionIndexResponseBody(body *APIVersionIndexResponseBody) (err error) {
	if body.API == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("api", "body"))
	}
	if body.Documentation == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("documentation", "body"))
	}
	return
}

// ValidateValidateResponseBody runs the validations defined on
// ValidateResponseBody
func ValidateValidateResponseBody(body *ValidateResponseBody) (err error) {
	for _, e := range body.Configuration {
		if e != nil {
			if err2 := ValidateConfigurationResponseBody(e); err2 != nil {
				err = goa.MergeErrors(err, err2)
			}
		}
	}
	return
}

// ValidateConfigurationResponseBody runs the validations defined on
// ConfigurationResponseBody
func ValidateConfigurationResponseBody(body *ConfigurationResponseBody) (err error) {
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.ClientID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("clientID", "body"))
	}
	if body.ClientSecret == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("clientSecret", "body"))
	}
	return
}
