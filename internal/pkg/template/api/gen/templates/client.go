// Code generated by goa v3.5.5, DO NOT EDIT.
//
// templates client
//
// Command:
// $ goa gen github.com/keboola/keboola-as-code/api/templates --output
// ./internal/pkg/template/api

package templates

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "templates" service client.
type Client struct {
	IndexRootEndpoint     goa.Endpoint
	IndexEndpointEndpoint goa.Endpoint
	HealthCheckEndpoint   goa.Endpoint
}

// NewClient initializes a "templates" service client given the endpoints.
func NewClient(indexRoot, indexEndpoint, healthCheck goa.Endpoint) *Client {
	return &Client{
		IndexRootEndpoint:     indexRoot,
		IndexEndpointEndpoint: indexEndpoint,
		HealthCheckEndpoint:   healthCheck,
	}
}

// IndexRoot calls the "index-root" endpoint of the "templates" service.
func (c *Client) IndexRoot(ctx context.Context) (err error) {
	_, err = c.IndexRootEndpoint(ctx, nil)
	return
}

// IndexEndpoint calls the "index" endpoint of the "templates" service.
func (c *Client) IndexEndpoint(ctx context.Context) (res *Index, err error) {
	var ires interface{}
	ires, err = c.IndexEndpointEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*Index), nil
}

// HealthCheck calls the "health-check" endpoint of the "templates" service.
func (c *Client) HealthCheck(ctx context.Context) (err error) {
	_, err = c.HealthCheckEndpoint(ctx, nil)
	return
}
