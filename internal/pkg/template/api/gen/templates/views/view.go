// Code generated by goa v3.5.5, DO NOT EDIT.
//
// templates views
//
// Command:
// $ goa gen github.com/keboola/keboola-as-code/api/templates --output
// ./internal/pkg/template/api

package views

import (
	goa "goa.design/goa/v3/pkg"
)

// Index is the viewed result type that is projected based on a view.
type Index struct {
	// Type to project
	Projected *IndexView
	// View to render
	View string
}

// IndexView is a type that runs validations on a projected type.
type IndexView struct {
	// Name of the API
	API *string
	// Url of the API documentation
	Documentation *string
}

var (
	// IndexMap is a map indexing the attribute names of Index by view name.
	IndexMap = map[string][]string{
		"default": {
			"api",
			"documentation",
		},
	}
)

// ValidateIndex runs the validations defined on the viewed result type Index.
func ValidateIndex(result *Index) (err error) {
	switch result.View {
	case "default", "":
		err = ValidateIndexView(result.Projected)
	default:
		err = goa.InvalidEnumValueError("view", result.View, []interface{}{"default"})
	}
	return
}

// ValidateIndexView runs the validations defined on IndexView using the
// "default" view.
func ValidateIndexView(result *IndexView) (err error) {
	if result.API == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("api", "result"))
	}
	if result.Documentation == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("documentation", "result"))
	}
	return
}
